name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:9.4
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: lms_db
          MYSQL_USER: lms_user
          MYSQL_PASSWORD: lms_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo

    - name: Set environment variables
      run: |
        echo "DATABASE_URL=mysql://lms_user:lms_password@127.0.0.1:3306/lms_db?serverVersion=9.4&charset=utf8mb4" >> $GITHUB_ENV
        echo "TEST_DATABASE_URL=mysql://lms_user:lms_password@127.0.0.1:3306/lms_db_test?serverVersion=9.4&charset=utf8mb4" >> $GITHUB_ENV
        echo "TEST_MYSQL_HOST=127.0.0.1" >> $GITHUB_ENV
        echo "APP_ENV=test" >> $GITHUB_ENV
        echo "APP_SECRET=ci-test-secret-key-for-symfony-cache-clear" >> $GITHUB_ENV

    - name: Install dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Create test database
      run: |
        mysql -h 127.0.0.1 -u root -proot_password -e "
        CREATE DATABASE IF NOT EXISTS lms_db_test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
        GRANT ALL PRIVILEGES ON lms_db_test.* TO 'lms_user'@'%';
        FLUSH PRIVILEGES;
        "

    - name: Verify migration files exist
      run: |
        echo "Checking migration files..."
        ls -la migrations/
        echo "Migration files check completed"

    - name: Run database migrations for test
      run: |
        echo "Checking migration status before running migrations..."
        DATABASE_URL=${{ env.TEST_DATABASE_URL }} APP_ENV=test php bin/console doctrine:migrations:status || echo "Migration status check failed, continuing..."
        
        echo "Running migrations for test database..."
        DATABASE_URL=${{ env.TEST_DATABASE_URL }} APP_ENV=test php bin/console doctrine:migrations:migrate --no-interaction
        echo "Migrations completed successfully"
        
        echo "Checking migration status after running migrations..."
        DATABASE_URL=${{ env.TEST_DATABASE_URL }} APP_ENV=test php bin/console doctrine:migrations:status || echo "Migration status check failed"
        
        # Verify tables were created
        echo "Verifying test database tables..."
        mysql -h 127.0.0.1 -u lms_user -plms_password lms_db_test -e "SHOW TABLES;"

    - name: Run unit tests
      run: |
        DATABASE_URL=${{ env.TEST_DATABASE_URL }} \
        APP_ENV=test \
        vendor/bin/phpunit tests/Unit --coverage-text

    - name: Run functional tests
      run: |
        DATABASE_URL=${{ env.TEST_DATABASE_URL }} \
        APP_ENV=test \
        vendor/bin/phpunit tests/Functional --coverage-text